{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth.service.ts","webpack:///./src/app/control/control.component.css","webpack:///./src/app/control/control.component.html","webpack:///./src/app/control/control.component.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/logout/logout.component.css","webpack:///./src/app/logout/logout.component.html","webpack:///./src/app/logout/logout.component.ts","webpack:///./src/app/signup/signup.component.css","webpack:///./src/app/signup/signup.component.html","webpack:///./src/app/signup/signup.component.ts","webpack:///./src/app/user.service.ts","webpack:///./src/app/validation.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;;;;;;;;;ACZqD;AACE;AAEK;AACH;AACM;AACH;AAE5D,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,UAAU,EAAE,SAAS,EAAE,MAAM,EAAE;IACvD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,SAAS,EAAE,SAAS,EAAE,2EAAgB,EAAE;IAChD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;IAC9C,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;CAC/C,CAAC;AAMF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAE,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAE;YACzC,OAAO,EAAE,CAAE,4DAAY,CAAE;SAC1B,CAAC;OACW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;ACpB7B,mB;;;;;;;;;;;ACAA,kD;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPiC;AACjB;AACe;AACT;AACU;AACA;AACM;AACH;AACf;AACA;AACe;AAClB;AAiB1C;IAAA;IAAyB,CAAC;IAAb,SAAS;QAhBrB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,qEAAc;gBACd,2EAAgB;gBAChB,wEAAe;gBACf,yEAAe;aAChB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,qEAAgB;gBAChB,oEAAgB;aACjB;YACD,SAAS,EAAE,CAAC,yDAAW,EAAC,yDAAW,EAAC,uDAAU,CAAC;YAC/C,SAAS,EAAE,CAAC,2DAAY,CAAC;SAC1B,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;AC5BqB;AACM;AAcjD;IAIE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;QAF5B,mBAAc,GAAG,KAAK;IAEU,CAAC;IAEzC,2BAA2B;IAC3B,iCAAW,GAAX,UAAY,KAAc;QACxB,IAAI,CAAC,cAAc,GAAG,KAAK;IAC7B,CAAC;IAED,sBAAI,mCAAU;aAAd;YACE,MAAM,CAAC,IAAI,CAAC,cAAc;QAC5B,CAAC;;;OAAA;IAED,oCAAc,GAAd,UAAe,QAAQ,EAAE,QAAQ;QAC/B,+DAA+D;QAC/D,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAS,eAAe,EAAE;YAC7C,QAAQ;YACR,QAAQ;SACT,CAAC;IACJ,CAAC;IAED,sCAAgB,GAAhB,UAAiB,QAAQ,EAAC,QAAQ;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAqB,qBAAqB,EAAE;YAC/D,QAAQ;YACR,QAAQ;SACT,CAAC;IACJ,CAAC;IA5BU,WAAW;QADvB,gEAAU,EAAE;yCAKe,+DAAU;OAJzB,WAAW,CA8BvB;IAAD,kBAAC;CAAA;AA9BuB;;;;;;;;;;;;ACfxB,4BAA4B,sBAAsB,wBAAwB,gCAAgC,4BAA4B,2BAA2B,2BAA2B,oBAAoB,qBAAqB,KAAK,iBAAiB,sBAAsB,qBAAqB,wBAAwB,4BAA4B,0BAA0B,gCAAgC,8BAA8B,qBAAqB,KAAK,uBAAuB,0BAA0B,qBAAqB,KAAK,C;;;;;;;;;;;ACAvhB,wCAAwC,SAAS,6D;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAC;AACJ;AACL;AACK;AAO9C;IAIE,0BACU,IAAiB,EACjB,MAAc,EACd,IAAgB;QAFhB,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAY;QAL1B,YAAO,GAAE,YAAY;IAKS,CAAC;IAE/B,mCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YACnC,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;gBAC3B,KAAI,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;oBACpC,KAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO;gBAC7B,CAAC,CAAC;YACJ,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC/B,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC;YAC/B,CAAC;QACH,CAAC,CAAC;IAEJ,CAAC;IAtBU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;SAGxB,CAAC;yCAMgB,yDAAW;YACT,sDAAM;YACT,yDAAW;OAPf,gBAAgB,CAuB5B;IAAD,uBAAC;CAAA;AAvB4B;;;;;;;;;;;;ACV7B,sBAAsB,sBAAsB,2BAA2B,sCAAsC,KAAK,kBAAkB,sBAAsB,gCAAgC,4BAA4B,sBAAsB,KAAK,iBAAiB,sBAAsB,qBAAqB,wBAAwB,4BAA4B,0BAA0B,gCAAgC,8BAA8B,qBAAqB,KAAK,uBAAuB,0BAA0B,qBAAqB,KAAK,cAAc,sBAAsB,2BAA2B,oBAAoB,qBAAqB,gCAAgC,4BAA4B,+BAA+B,KAAK,oBAAoB,sBAAsB,+BAA+B,gCAAgC,2BAA2B,sBAAsB,yBAAyB,4BAA4B,KAAK,wCAAwC,mBAAmB,wBAAwB,0BAA0B,oBAAoB,yBAAyB,KAAK,uBAAuB,qBAAqB,sBAAsB,4BAA4B,wBAAwB,wBAAwB,KAAK,uBAAuB,qBAAqB,sBAAsB,4BAA4B,wBAAwB,wBAAwB,KAAK,C;;;;;;;;;;;ACA/3C,oe;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AACL;AAOzC;IAEE,wBAAoB,IAAiB,EACjB,MAAc;QADd,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,iCAAQ,GAAR;IACA,CAAC;IAED,kCAAS,GAAT,UAAU,KAAK;QAAf,iBAeC;QAdC,KAAK,CAAC,cAAc,EAAE;QACtB,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM;QAC3B,IAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,KAAK;QACxD,IAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,KAAK;QAExD,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YACzD,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;gBACjC,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YAC5B,CAAC;QACH,CAAC,CAAC;QACF,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,QAAQ,CAAC;IACjC,CAAC;IAED,uCAAc,GAAd;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;IA3BU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCAG0B,yDAAW;YACT,sDAAM;OAHvB,cAAc,CA6B1B;IAAD,qBAAC;CAAA;AA7B0B;;;;;;;;;;;;ACT3B,mB;;;;;;;;;;;ACAA,+C;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AACL;AACK;AAO9C;IAEE,yBAAoB,IAAiB,EAAU,MAAc,EAAU,IAAiB;QAApE,SAAI,GAAJ,IAAI,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,SAAI,GAAJ,IAAI,CAAa;IAAI,CAAC;IAE7F,kCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,cAAI;YAC/B,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChB,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;gBAC/B,KAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC9B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAC,cAAc,CAAC;YAC9B,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAbU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAG0B,yDAAW,EAAkB,sDAAM,EAAgB,yDAAW;OAF7E,eAAe,CAe3B;IAAD,sBAAC;CAAA;AAf2B;;;;;;;;;;;;ACV5B,sBAAsB,sBAAsB,2BAA2B,sCAAsC,KAAK,kBAAkB,sBAAsB,gCAAgC,4BAA4B,sBAAsB,KAAK,iBAAiB,sBAAsB,qBAAqB,wBAAwB,4BAA4B,0BAA0B,gCAAgC,8BAA8B,qBAAqB,KAAK,uBAAuB,0BAA0B,qBAAqB,KAAK,cAAc,sBAAsB,2BAA2B,oBAAoB,qBAAqB,gCAAgC,4BAA4B,+BAA+B,KAAK,oBAAoB,sBAAsB,+BAA+B,gCAAgC,2BAA2B,sBAAsB,yBAAyB,4BAA4B,KAAK,wCAAwC,mBAAmB,wBAAwB,0BAA0B,oBAAoB,yBAAyB,KAAK,uBAAuB,qBAAqB,sBAAsB,4BAA4B,wBAAwB,wBAAwB,KAAK,C;;;;;;;;;;;ACA5uC,ibAAib,SAAS,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAxY;AACT;AACK;AACA;AACH;AAO3C;IAEE,yBACU,IAAiB,EACjB,MAAc,EACd,IAAiB,EACjB,UAAsB;QAHtB,SAAI,GAAJ,IAAI,CAAa;QACjB,WAAM,GAAN,MAAM,CAAQ;QACd,SAAI,GAAJ,IAAI,CAAa;QACjB,eAAU,GAAV,UAAU,CAAY;QALhC,YAAO,GAAC,EAAE;IAMN,CAAC;IAEL,kCAAQ,GAAR;QAAA,iBAQC;QAPC,IAAI,CAAC,IAAI,CAAC,UAAU,EAAE,CAAC,SAAS,CAAC,cAAI;YACnC,EAAE,EAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;gBACf,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;YACnC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,iBAAiB;YACnB,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,0CAAgB,GAAhB,UAAiB,KAAK;QAAtB,iBAcC;QAbC,KAAK,CAAC,cAAc,EAAE;QACtB,IAAM,MAAM,GAAG,KAAK,CAAC,MAAM;QAC3B,IAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,KAAK;QACxD,IAAM,QAAQ,GAAG,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC,KAAK;QAExD,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,cAAI;YAC1D,EAAE,EAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAChB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;gBAC1B,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;YACjC,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC;YAC5B,CAAC;QACH,CAAC,CAAC;IACJ,CAAC;IAED,qBAAqB;IACrB,iCAAO,GAAP,UAAQ,KAAK;QACX,qBAAqB;QACrB,uBAAuB;QAEvB,mDAAmD;QACnD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC;QAC3B,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO;IACrD,CAAC;IA3CU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAIgB,yDAAW;YACT,sDAAM;YACR,yDAAW;YACL,sDAAU;OANrB,eAAe,CA8C3B;IAAD,sBAAC;CAAA;AA9C2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACXe;AACO;AAgBlD;IAEE,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,iCAAW,GAAX;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,mBAAmB,CAAC;IACnD,CAAC;IAED,gCAAU,GAAV;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAa,qBAAqB,CAAC;IACzD,CAAC;IAED,4BAAM,GAAN;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,iBAAiB,CAAC;IACvD,CAAC;IAdU,WAAW;QADvB,gEAAU,EAAE;yCAGe,+DAAU;OAFzB,WAAW,CAgBvB;IAAD,kBAAC;CAAA;AAhBuB;;;;;;;;;;;;;;ACZxB;AAAA;IAAA;QAEI,mBAAc,GAAiB;YAC3B,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,KAAK;SAChB,CAAC;IA8BJ,CAAC;IA5BQ,wCAAmB,GAA1B,UAA2B,QAAQ;QAC/B,EAAE,EAAC,QAAQ,IAAE,OAAO,CAAC,EAAC;YAClB,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,cAAc;YAC5C,IAAI,CAAC,cAAc,CAAC,MAAM,GAAI,IAAI;QACtC,CAAC;QAAA,IAAI,EAAC;YACF,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI;YAClC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAI,KAAK;QACvC,CAAC;IAEL,CAAC;IACM,wCAAmB,GAA1B,UAA2B,QAAQ;QAC/B,EAAE,EAAC,QAAQ,IAAE,UAAU,CAAC,EAAC;YACrB,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,UAAU;YACxC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAI,IAAI;QACtC,CAAC;QAAA,IAAI,EAAC;YACF,IAAI,CAAC,cAAc,CAAC,OAAO,GAAG,IAAI;YAClC,IAAI,CAAC,cAAc,CAAC,MAAM,GAAI,KAAK;QACvC,CAAC;IACL,CAAC;IAEM,yBAAI,GAAX,UAAY,KAAK;QACb,EAAE,EAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAE,UAAU,CAAC,EAAC;YAC5B,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;QACD,IAAI,CAAC,EAAE,EAAC,KAAK,CAAC,MAAM,CAAC,EAAE,IAAE,UAAU,CAAC,EAAC;YACjC,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;QAChD,CAAC;IACL,CAAC;IACH,iBAAC;AAAD,CAAC;;;;;;;;;;;;;;;ACxCH;AAAA,gFAAgF;AAChF,2EAA2E;AAC3E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;GAKG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;ACdpB;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LogoutComponent } from './logout/logout.component';\nimport { LoginComponent } from './login/login.component';\nimport { ControlComponent } from './control/control.component';\nimport { SignupComponent } from './signup/signup.component';\n\nconst routes: Routes = [\n  { path: '', redirectTo: '/control', pathMatch: 'full' },\n  { path: 'login', component: LoginComponent },\n  { path: 'control', component: ControlComponent },\n  { path: 'signup', component: SignupComponent },\n  { path: 'logout', component: LogoutComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\nexport class AppRoutingModule {}","module.exports = \"\"","module.exports = \"<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport { LoginComponent } from './login/login.component';\nimport { ControlComponent } from './control/control.component';\nimport { SignupComponent } from './signup/signup.component';\nimport { AuthService } from './auth.service';\nimport { UserService } from './user.service';\nimport { LogoutComponent } from './logout/logout.component';\nimport { Validation } from './validation';\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    ControlComponent,\n    SignupComponent,\n    LogoutComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule\n  ],\n  providers: [AuthService,UserService,Validation],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http'\nimport { ResolveStart } from '@angular/router/src/events';\n\ninterface myData {\n  success: boolean,\n  message: string\n}\n\ninterface registrationStatus{\n  success: boolean,\n  message: string\n}\n\n@Injectable()\nexport class AuthService {\n\n  private loggedInStatus = false\n\n  constructor(private http: HttpClient) { }\n  \n  //login.component.ts:から呼ばれる\n  setLoggedIn(value: boolean) {\n    this.loggedInStatus = value\n  }\n\n  get isLoggedIn() {\n    return this.loggedInStatus\n  }\n\n  getUserDetails(username, password) {\n    // post these details to API server return user info if correct\n    return this.http.post<myData>('/api/auth.php', {\n      username,\n      password\n    })\n  }\n\n  postRegistration(username,password){\n    return this.http.post<registrationStatus>('/api/createuser.php', {\n      username,\n      password\n    })\n  }\n\n}\n","module.exports = \"#message {\\r\\n    display: flex;\\r\\n    font-size: 40px;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    text-align: center;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    padding: 20px;\\r\\n    color: white;\\r\\n    font-size: 30px;\\r\\n    border-radius: 10px;\\r\\n    background: black;\\r\\n    border: 1px solid black;\\r\\n    text-decoration: none;\\r\\n    margin: 20px;\\r\\n}\\r\\n\\r\\n.button:hover {\\r\\n    background: white;\\r\\n    color: black;\\r\\n}\"","module.exports = \"<div id=\\\"message\\\">{{message}} <a routerLink=\\\"/logout\\\" class=\\\"button\\\">Logout</a></div>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\n\n@Component({\n  selector: 'app-control',\n  templateUrl: './control.component.html',\n  styleUrls: ['./control.component.css']\n})\nexport class ControlComponent implements OnInit {\n\n  message= \"loading...\"\n\n  constructor(\n    private auth: AuthService, \n    private router: Router,\n    private user:UserService) { }\n\n  ngOnInit() {\n    this.user.isLoggedIn().subscribe(data => {\n      if(data.status) {\n        this.auth.setLoggedIn(true)\n        this.user.getSomeData().subscribe(data => {\n          this.message = data.message\n        })\n      } else {\n        this.router.navigate(['login'])\n        window.alert('セッション情報がありません')\n      }\n    })\n    \n  }\n}\n","module.exports = \"h1 {\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n    border-bottom: 1px solid #eee;\\r\\n}\\r\\n\\r\\n#buttons {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    height: 500px;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    padding: 20px;\\r\\n    color: white;\\r\\n    font-size: 30px;\\r\\n    border-radius: 10px;\\r\\n    background: black;\\r\\n    border: 1px solid black;\\r\\n    text-decoration: none;\\r\\n    margin: 20px;\\r\\n}\\r\\n\\r\\n.button:hover {\\r\\n    background: white;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\nform {\\r\\n    display: flex;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items:center;\\r\\n    padding: 20px;\\r\\n    background: #eee;\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\ninput#username, input#password {\\r\\n    outline: 0;\\r\\n    font-size: 20px;\\r\\n    padding: 5px 10px;\\r\\n    margin: 5px;\\r\\n    min-width: 300px;\\r\\n}\\r\\n\\r\\nbutton#submit {\\r\\n    margin: 20px;\\r\\n    padding: 20px;\\r\\n    border-radius: 10px;\\r\\n    font-size: 20px;\\r\\n    cursor: pointer;\\r\\n}\\r\\n\\r\\nbutton#signup {\\r\\n    margin: 20px;\\r\\n    padding: 20px;\\r\\n    border-radius: 10px;\\r\\n    font-size: 20px;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"\\n<form (submit)=\\\"loginUser($event)\\\">\\n  <div class=\\\"container\\\">\\n  <div>\\n    <input type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"Username\\\" id=\\\"username\\\">\\n  </div>\\n  <div>\\n    <input type=\\\"password\\\" autocomplete=\\\"off\\\" placeholder=\\\"Password\\\" id=\\\"password\\\">\\n  </div>\\n  <div>\\n    <button type=\\\"submit\\\" id=\\\"submit\\\">Submit</button>\\n    <button type=\\\"button\\\" id=\\\"signup\\\" routerLink=\\\"/signup\\\">Signup</button>\\n  </div>\\n</div>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(private auth: AuthService, \n              private router: Router) { }\n\n  ngOnInit() {\n  }\n\n  loginUser(event) {\n    event.preventDefault()\n    const target = event.target\n    const username = target.querySelector('#username').value\n    const password = target.querySelector('#password').value\n\n    this.auth.getUserDetails(username, password).subscribe(data => {\n      if(data.success) {\n        this.router.navigate(['control'])\n        this.auth.setLoggedIn(true)\n      } else {\n        window.alert(data.message)\n      }\n    })\n    console.log(username, password)\n  }\n\n  navigateSignup() {\n    this.router.navigate(['signup'])\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  logout works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from '../user.service';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-logout',\n  templateUrl: './logout.component.html',\n  styleUrls: ['./logout.component.css']\n})\nexport class LogoutComponent implements OnInit {\n\n  constructor(private user: UserService, private router: Router, private auth: AuthService) { }\n\n  ngOnInit() {\n    this.user.logout().subscribe(data => {\n      if(data.success) {\n        this.router.navigate(['login'])\n        this.auth.setLoggedIn(false)\n      } else {\n        window.alert('Some problem')\n      }\n    })\n  }\n\n}\n","module.exports = \"h1 {\\r\\n    padding: 20px;\\r\\n    text-align: center;\\r\\n    border-bottom: 1px solid #eee;\\r\\n}\\r\\n\\r\\n#buttons {\\r\\n    display: flex;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    height: 500px;\\r\\n}\\r\\n\\r\\n.button {\\r\\n    padding: 20px;\\r\\n    color: white;\\r\\n    font-size: 30px;\\r\\n    border-radius: 10px;\\r\\n    background: black;\\r\\n    border: 1px solid black;\\r\\n    text-decoration: none;\\r\\n    margin: 20px;\\r\\n}\\r\\n\\r\\n.button:hover {\\r\\n    background: white;\\r\\n    color: black;\\r\\n}\\r\\n\\r\\nform {\\r\\n    display: flex;\\r\\n    position: absolute;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    justify-content: center;\\r\\n    align-items: center;\\r\\n    flex-direction: column;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    display: flex;\\r\\n    flex-direction: column;\\r\\n    justify-content: center;\\r\\n    align-items:center;\\r\\n    padding: 20px;\\r\\n    background: #eee;\\r\\n    border-radius: 20px;\\r\\n}\\r\\n\\r\\ninput#username, input#password {\\r\\n    outline: 0;\\r\\n    font-size: 20px;\\r\\n    padding: 5px 10px;\\r\\n    margin: 5px;\\r\\n    min-width: 300px;\\r\\n}\\r\\n\\r\\nbutton#submit {\\r\\n    margin: 20px;\\r\\n    padding: 20px;\\r\\n    border-radius: 10px;\\r\\n    font-size: 20px;\\r\\n    cursor: pointer;\\r\\n}\"","module.exports = \"<form (submit)=\\\"createUserDetail($event)\\\">\\n  <div class=\\\"container\\\">\\n  <div>\\n    <input type=\\\"text\\\" autocomplete=\\\"off\\\" placeholder=\\\"Username\\\" id=\\\"username\\\" (keyup)=\\\"onKeyUp($event)\\\">\\n  </div>\\n  <div>\\n    <input type=\\\"password\\\" autocomplete=\\\"off\\\" placeholder=\\\"Password\\\" id=\\\"password\\\">\\n  </div>\\n  <div>\\n    <button type=\\\"submit\\\" id=\\\"submit\\\">Submit</button>\\n  </div>\\n</div>\\n<h1>{{message}}</h1>\\n</form>\"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { UserService } from '../user.service';\nimport { AuthService } from '../auth.service';\nimport { Validation } from '../validation';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.css']\n})\nexport class SignupComponent implements OnInit {\n  message=\"\"\n  constructor(\n    private user: UserService,\n    private router: Router,\n    private auth: AuthService,\n    private varidation: Validation\n  ) { }\n\n  ngOnInit() {\n    this.user.isLoggedIn().subscribe(data => {\n      if(data.status) {\n        this.router.navigate(['control'])\n      } else {\n        //ここでは何もしない（現状）  \n      }\n    })\n  }\n  \n  createUserDetail(event){\n    event.preventDefault()\n    const target = event.target\n    const username = target.querySelector('#username').value\n    const password = target.querySelector('#password').value\n\n    this.auth.postRegistration(username,password).subscribe(data => {\n      if(data.success) {\n        window.alert(data.message)\n        this.router.navigate(['login'])\n      } else {\n        window.alert(data.message)\n      }\n    })\n  }\n\n  //キーが上がるたびに呼び出されるメソッド\n  onKeyUp(event){\n    //console.log(event);\n    //を用いるとキー入力するたびデバッグできるよ\n    \n    //キー入力イベントをmain関数に渡してtargetで振り分ける=>../validation.ts\n    this.varidation.main(event)\n    this.message=this.varidation.validationData.message\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\n\ninterface myData {\n  message: string,\n  success: boolean\n}\n\ninterface isLoggedIn {\n  status: boolean\n}\n\ninterface logoutStatus {\n  success: boolean\n}\n@Injectable()\nexport class UserService {\n\n  constructor(private http: HttpClient) { }\n\n  getSomeData() {\n    return this.http.get<myData>('/api/database.php')\n  }\n\n  isLoggedIn(): Observable<isLoggedIn> {\n    return this.http.get<isLoggedIn>('/api/isloggedin.php')\n  }\n\n  logout() {\n    return this.http.get<logoutStatus>('/api/logout.php')\n  }\n\n}\n","interface validationObj {\r\n    message: string;\r\n    status: boolean;\r\n}\r\n\r\nexport class Validation {\r\n\r\n    validationData: validationObj ={\r\n        message: \"\",\r\n        status: false,\r\n    };\r\n\r\n    public validation_username(username) { \r\n        if(username==\"admin\"){          //ここで正規表現を用いて入力チェックする\r\n            this.validationData.message = \"この名前は使用できません\"\r\n            this.validationData.status  = true\r\n        }else{\r\n            this.validationData.message = \"ok\"\r\n            this.validationData.status  = false\r\n        }\r\n\r\n    }\r\n    public validation_password(password){\r\n        if(password==\"password\"){       //ここで正規表現を用いて入力チェックする\r\n            this.validationData.message = \"大文字小文字数字\"\r\n            this.validationData.status  = true\r\n        }else{\r\n            this.validationData.message = \"ok\"\r\n            this.validationData.status  = false\r\n        }\r\n    }\r\n\r\n    public main(event){\r\n        if(event.target.id==\"username\"){\r\n            this.validation_username(event.target.value)\r\n        }\r\n        else if(event.target.id==\"password\"){\r\n            this.validation_password(event.target.value)\r\n        }\r\n    }\r\n  }\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}